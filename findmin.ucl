module main
{
  // array we will be searching in.
  const arr : [integer]integer;
  // size of array.
  const n   : integer; 
  // loop index.
  var i     : integer;
  // was the value found?
  var min   : integer; 
  // has the search finished
  var done  : boolean;

  init {
    assume (n > 0);

    i = 0;
    done = false;
    min = arr[0];
  }

  next {
    if (i < n) {
      if (arr[i] < min) {
        min' = arr[i];
      }
      i' = i + 1;
      done' = (i' == n);
    }
  }

  // TODO: add invariants to prove property.
  invariant min_final:
    (done) ==> (forall (j : integer) :: (j >= 0 && j < n) ==> min <= arr[j]);
  invariant min_final_exists:
    (done) ==> (exists (j : integer) :: j >= 0 && j < n && arr[j] == min);

  control {
    v = induction;
    check;
    print_results;
    v.print_cex(i, n, arr[i], min, done);
  }
}
